// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.1.1-esm/index.mjs";import{factory as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.1.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as p}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.1.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.1.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sqrt@v0.1.0-esm/index.mjs";function h(e,t,n){return!p(e)||g(e)?new TypeError(u("invalid argument. First argument must be a number and not NaN. Value: `%s`.",e)):!p(t)||g(t)?new TypeError(u("invalid argument. Second argument must be a number and not NaN. Value: `%s`.",t)):!p(n)||g(n)?new TypeError(u("invalid argument. Third argument must be a number and not NaN. Value: `%s`.",n)):e<=n&&n<=t?null:new RangeError(u("invalid arguments. Parameters must satisfy the following condition: %s. a: `%f`. b: `%f`. c: `%f`.","a <= c <= b",e,t,n))}function j(e,t,n,s){var r,i;return r=(s-t)/(n-t),(i=e())<r?t+f((n-t)*(s-t)*i):n-f((n-t)*(n-s)*(1-i))}function c(){var p,g,f,c,v,b,y;if(0===arguments.length)g=m();else if(1===arguments.length){if(!s(p=arguments[0]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",p));if(i(p,"prng")){if(!r(p.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",p.prng));g=p.prng}else g=m(p)}else{if(c=h(v=arguments[0],b=arguments[1],y=arguments[2]))throw c;if(arguments.length>3){if(!s(p=arguments[3]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",p));if(i(p,"prng")){if(!r(p.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",p.prng));g=p.prng}else g=m(p)}else g=m()}return e(f=void 0===v?P:V,"NAME","triangular"),p&&p.prng?(e(f,"seed",null),e(f,"seedLength",null),n(f,"state",o(null),a),e(f,"stateLength",null),e(f,"byteLength",null),e(f,"toJSON",o(null)),e(f,"PRNG",g)):(t(f,"seed",w),t(f,"seedLength",x),n(f,"state",L,T),t(f,"stateLength",N),t(f,"byteLength",E),e(f,"toJSON",O),e(f,"PRNG",g),g=g.normalized),f;function w(){return g.seed}function x(){return g.seedLength}function N(){return g.stateLength}function E(){return g.byteLength}function L(){return g.state}function T(e){g.state=e}function O(){var e={type:"PRNG"};return e.name=f.NAME,e.state=l(g.state),e.params=void 0===v?[]:[v,b,y],e}function V(){return j(g,v,b,y)}function P(e,t,n){return d(e)||d(t)||d(n)||!(e<=n&&n<=t)?NaN:j(g,e,t,n)}}var v=c();e(v,"factory",c);export{v as default,c as factory};
//# sourceMappingURL=index.mjs.map
